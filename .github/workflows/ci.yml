name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.16.0'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Lint frontend
        working-directory: ./frontend
        run: npm run lint

      - name: Format frontend (check)
        working-directory: ./frontend
        run: npm run format -- --check

      - name: Test frontend
        working-directory: ./frontend
        run: echo "No frontend tests configured"

      - name: Cache Python venv
        uses: actions/cache@v3
        with:
          path: backend/.venv
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Create Python venv
        working-directory: ./backend
        run: python -m venv .venv

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint backend
        working-directory: ./backend
        run: |
          source .venv/bin/activate
          pip install flake8
          source .venv/bin/activate
          flake8 .

      - name: Format backend (check)
        working-directory: ./backend
        run: python -m black --check .

      - name: Test backend
        working-directory: ./backend
        run: python -m pytest